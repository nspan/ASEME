<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel"
    diagramFileExtension="kse"
    domainFileExtension="stct">
  <audits>
    <categories
        id="statechart.audits"
        name="statechart audits"
        description="A set of StateChart's Audits"
        path="//@audits/@categories.0"
        audits="//@audits/@rules.0 //@audits/@rules.1 //@audits/@rules.2 //@audits/@rules.3 //@audits/@rules.4 //@audits/@rules.5 //@audits/@rules.6"/>
    <rules
        name="oneRoot"
        description="Only one root per model"
        id="root"
        rule="//@expressionProviders/@providers.1/@expressions.0"
        message="Only one root node can exist in a Statechart"
        useInLiveMode="true"
        category="//@audits/@categories.0">
      <target
          xsi:type="gmfgen:GenDomainElementTarget"
          contextSelector="//@audits/@clientContexts.0">
        <element
            href="StateChart.genmodel#//statechart/Model"/>
      </target>
    </rules>
    <rules
        name="ANDORnode"
        description="AND Node have only OR nodes as children"
        id="AND.OR.children"
        rule="//@expressionProviders/@providers.1/@expressions.1"
        message="AND node can have only OR nodes as children"
        useInLiveMode="true"
        category="//@audits/@categories.0">
      <target
          xsi:type="gmfgen:GenDomainElementTarget"
          contextSelector="//@audits/@clientContexts.0">
        <element
            href="StateChart.genmodel#//statechart/Node"/>
      </target>
    </rules>
    <rules
        name="start source"
        description="A START node can only be source of an transition"
        id="start.source"
        rule="//@expressionProviders/@providers.1/@expressions.2"
        message="START node can't be target node of an transition"
        category="//@audits/@categories.0">
      <target
          xsi:type="gmfgen:GenDomainElementTarget"
          contextSelector="//@audits/@clientContexts.0">
        <element
            href="StateChart.genmodel#//statechart/Transition"/>
      </target>
    </rules>
    <rules
        name="end target"
        description="End node can't be source of an transition"
        id="end.target"
        rule="//@expressionProviders/@providers.1/@expressions.3"
        message="END node can only be target of an transition"
        category="//@audits/@categories.0">
      <target
          xsi:type="gmfgen:GenDomainElementTarget"
          contextSelector="//@audits/@clientContexts.0">
        <element
            href="StateChart.genmodel#//statechart/Transition"/>
      </target>
    </rules>
    <rules
        name="same father"
        description="same father for source-target of an transition"
        id="same.father"
        rule="//@expressionProviders/@providers.1/@expressions.4"
        message="It's recommended the source and the target to have the same father node"
        severity="WARNING"
        category="//@audits/@categories.0">
      <target
          xsi:type="gmfgen:GenDomainElementTarget"
          contextSelector="//@audits/@clientContexts.0">
        <element
            href="StateChart.genmodel#//statechart/Transition"/>
      </target>
    </rules>
    <rules
        name="oneStartNode"
        description="Only one START Node per level"
        id="start.node.one"
        rule="//@expressionProviders/@providers.1/@expressions.5"
        message="An OR state can have only one START node as a child"
        useInLiveMode="true"
        category="//@audits/@categories.0">
      <target
          xsi:type="gmfgen:GenDomainElementTarget"
          contextSelector="//@audits/@clientContexts.0">
        <element
            href="StateChart.genmodel#//statechart/Node"/>
      </target>
    </rules>
    <rules
        name="oneEndNode"
        description="Only one END Node per level"
        id="end.node.one"
        rule="//@expressionProviders/@providers.1/@expressions.6"
        message="An OR state can have only one END node as a child"
        useInLiveMode="true"
        category="//@audits/@categories.0">
      <target
          xsi:type="gmfgen:GenDomainElementTarget"
          contextSelector="//@audits/@clientContexts.0">
        <element
            href="StateChart.genmodel#//statechart/Node"/>
      </target>
    </rules>
    <clientContexts
        ruleTargets="//@audits/@rules.0/@target //@audits/@rules.1/@target //@audits/@rules.2/@target //@audits/@rules.3/@target //@audits/@rules.4/@target //@audits/@rules.5/@target //@audits/@rules.6/@target"/>
  </audits>
  <diagram
      visualID="1000"
      editPartClassName="ModelEditPart"
      itemSemanticEditPolicyClassName="ModelItemSemanticEditPolicy"
      canonicalEditPolicyClassName="ModelCanonicalEditPolicy"
      iconProviderPriority="Low"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="ModelEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="StateChart.genmodel#//statechart/Model"/>
    <childNodes
        visualID="3001"
        editPartClassName="Node9EditPart"
        itemSemanticEditPolicyClassName="Node9ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node9CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node9GraphicalNodeEditPolicy"
        createCommandClassName="Node9CreateCommand"
        containers="//@diagram/@compartments.0 //@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeConditionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeConditionFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCondSymbol; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeConditionFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(25)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureCondSymbol = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureCondSymbol.setText(&quot;C&quot;);&#xA;&#xA;fFigureCondSymbol.setFont(FFIGURECONDSYMBOL_FONT);&#xA;&#xA;&#xA;&#xA;fFigureCondSymbol.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(fFigureCondSymbol);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCondSymbol() {&#xA;&#x9;&#x9;return fFigureCondSymbol;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONDSYMBOL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;CondFont&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="25"
            height="25"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.2">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.3">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5001"
          editPartClassName="WrappingLabel4EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel4ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureCondSymbol"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3002"
        editPartClassName="Node10EditPart"
        itemSemanticEditPolicyClassName="Node10ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node10CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node10GraphicalNodeEditPolicy"
        createCommandClassName="Node10CreateCommand"
        containers="//@diagram/@compartments.0 //@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeBasicFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeBasicFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBasicName; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBasicActions; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeBasicFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureNodeBasicName = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeBasicName.setText(&quot;name&quot;);&#xA;&#xA;fFigureNodeBasicName.setFont(FFIGURENODEBASICNAME_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeBasicName.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;this.add(fFigureNodeBasicName);&#xA;&#xA;&#xA;&#xA;fFigureNodeBasicActions = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeBasicActions.setText(&quot;&quot;);&#xA;&#xA;fFigureNodeBasicActions.setFont(FFIGURENODEBASICACTIONS_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeBasicActions.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;this.add(fFigureNodeBasicActions);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBasicName() {&#xA;&#x9;&#x9;return fFigureNodeBasicName;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBasicActions() {&#xA;&#x9;&#x9;return fFigureNodeBasicActions;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 192, 255, 124);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEBASICNAME_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;TitleFont&quot;, 14, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEBASICACTIONS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;TextFont&quot;, 12, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.4">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.5">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5002"
          editPartClassName="NodeName4EditPart"
          itemSemanticEditPolicyClassName="NodeName4ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeBasicName"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5017"
          editPartClassName="NodeActions3EditPart"
          itemSemanticEditPolicyClassName="NodeActions3ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeBasicActions"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/actions"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/actions"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3003"
        editPartClassName="Node11EditPart"
        itemSemanticEditPolicyClassName="Node11ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node11CanonicalEditPolicy"
        compartments="//@diagram/@compartments.1"
        graphicalNodeEditPolicyClassName="Node11GraphicalNodeEditPolicy"
        createCommandClassName="Node11CreateCommand"
        containers="//@diagram/@compartments.1 //@diagram/@compartments.2 //@diagram/@compartments.0 //@diagram/@compartments.3">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeORFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeORFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOrName; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RoundedRectangle fFigureNodeOrCompartment; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOrActions; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeORFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutThis = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureNodeOrName = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeOrName.setText(&quot;name&quot;);&#xA;&#xA;fFigureNodeOrName.setFont(FFIGURENODEORNAME_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeOrName.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;this.add(fFigureNodeOrName, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#xA;&#xA;fFigureNodeOrCompartment = new org.eclipse.draw2d.RoundedRectangle();&#xA;&#xA;fFigureNodeOrCompartment.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;&#x9;fFigureNodeOrCompartment.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fFigureNodeOrCompartment.setBackgroundColor(FFIGURENODEORCOMPARTMENT_BACK&#xA;);&#xA;&#xA;fFigureNodeOrCompartment.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#xA;this.add(fFigureNodeOrCompartment, org.eclipse.draw2d.BorderLayout.CENTER);&#xA;&#xA;&#xA;fFigureNodeOrActions = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeOrActions.setText(&quot;&lt;Actions>&quot;);&#xA;&#xA;fFigureNodeOrActions.setFont(FFIGURENODEORACTIONS_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeOrActions.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;fFigureNodeOrCompartment.add(fFigureNodeOrActions);&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel nodeOrActions2 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;nodeOrActions2.setText(&quot;&lt;Actions>&quot;);&#xA;&#xA;nodeOrActions2.setFont(NODEORACTIONS2_FONT);&#xA;&#xA;&#xA;&#xA;nodeOrActions2.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;fFigureNodeOrActions.add(nodeOrActions2);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOrName() {&#xA;&#x9;&#x9;return fFigureNodeOrName;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RoundedRectangle getFigureNodeOrCompartment() {&#xA;&#x9;&#x9;return fFigureNodeOrCompartment;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOrActions() {&#xA;&#x9;&#x9;return fFigureNodeOrActions;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 253, 255, 182);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEORNAME_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;TitleFont&quot;, 14, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color FFIGURENODEORCOMPARTMENT_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEORACTIONS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ActionsFont&quot;, 12, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font NODEORACTIONS2_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ActionsFont&quot;, 12, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.0">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.1">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5004"
          editPartClassName="NodeName5EditPart"
          itemSemanticEditPolicyClassName="NodeName5ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeOrName"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5015"
          editPartClassName="NodeActions4EditPart"
          itemSemanticEditPolicyClassName="NodeActions4ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeOrActions"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.2"
            editorPattern=""
            editPattern=""
            viewMethod="NATIVE"
            editMethod="NATIVE">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/actions"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/actions"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3004"
        editPartClassName="Node12EditPart"
        itemSemanticEditPolicyClassName="Node12ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node12CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node12GraphicalNodeEditPolicy"
        createCommandClassName="Node12CreateCommand"
        containers="//@diagram/@compartments.1 //@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeStartFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeStartFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeStartFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(16)&#xA;, getMapMode().DPtoLP(16)&#xA;));&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="16"
            height="16"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.6">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.7">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
    </childNodes>
    <childNodes
        visualID="3005"
        editPartClassName="Node13EditPart"
        itemSemanticEditPolicyClassName="Node13ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node13CanonicalEditPolicy"
        compartments="//@diagram/@compartments.2"
        graphicalNodeEditPolicyClassName="Node13GraphicalNodeEditPolicy"
        createCommandClassName="Node13CreateCommand"
        containers="//@diagram/@compartments.1 //@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeANDFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeANDFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeAndName; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RoundedRectangle fFigureNodeAndCompartment; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeANDFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutThis = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureNodeAndName = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeAndName.setText(&quot;name&quot;);&#xA;&#xA;fFigureNodeAndName.setFont(FFIGURENODEANDNAME_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeAndName.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;this.add(fFigureNodeAndName, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#xA;&#xA;fFigureNodeAndCompartment = new org.eclipse.draw2d.RoundedRectangle();&#xA;&#xA;fFigureNodeAndCompartment.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;&#x9;fFigureNodeAndCompartment.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fFigureNodeAndCompartment.setBackgroundColor(FFIGURENODEANDCOMPARTMENT_BACK&#xA;);&#xA;&#xA;fFigureNodeAndCompartment.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#xA;this.add(fFigureNodeAndCompartment, org.eclipse.draw2d.BorderLayout.CENTER);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeAndName() {&#xA;&#x9;&#x9;return fFigureNodeAndName;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RoundedRectangle getFigureNodeAndCompartment() {&#xA;&#x9;&#x9;return fFigureNodeAndCompartment;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 177, 244, 240);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEANDNAME_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;TitleFont&quot;, 14, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color FFIGURENODEANDCOMPARTMENT_BACK = new org.eclipse.swt.graphics.Color(null, 222, 253, 253);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.8">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.9">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5003"
          editPartClassName="NodeName6EditPart"
          itemSemanticEditPolicyClassName="NodeName6ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeAndName"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3006"
        editPartClassName="Node14EditPart"
        itemSemanticEditPolicyClassName="Node14ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node14CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node14GraphicalNodeEditPolicy"
        createCommandClassName="Node14CreateCommand"
        containers="//@diagram/@compartments.1 //@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeEndFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeEndFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Ellipse fFigureBlack; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeEndFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutThis = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(4);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(35)&#xA;, getMapMode().DPtoLP(35)&#xA;));&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(35)&#xA;, getMapMode().DPtoLP(35)&#xA;));&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureBlack = new org.eclipse.draw2d.Ellipse();&#xA;&#xA;&#x9;fFigureBlack.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;this.add(fFigureBlack, org.eclipse.draw2d.BorderLayout.CENTER);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.Ellipse getFigureBlack() {&#xA;&#x9;&#x9;return fFigureBlack;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="35"
            height="35"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.10">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.11">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
    </childNodes>
    <childNodes
        visualID="3007"
        editPartClassName="Node15EditPart"
        itemSemanticEditPolicyClassName="Node15ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node15CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node15GraphicalNodeEditPolicy"
        createCommandClassName="Node15CreateCommand"
        containers="//@diagram/@compartments.1 //@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeHistoryFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeHistoryFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureHistorySymbol; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeHistoryFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(25)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureHistorySymbol = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureHistorySymbol.setText(&quot;H*&quot;);&#xA;&#xA;fFigureHistorySymbol.setFont(FFIGUREHISTORYSYMBOL_FONT);&#xA;&#xA;&#xA;&#xA;fFigureHistorySymbol.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(fFigureHistorySymbol);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureHistorySymbol() {&#xA;&#x9;&#x9;return fFigureHistorySymbol;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREHISTORYSYMBOL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;HistoryFont&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="25"
            height="25"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.12">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.13">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5013"
          editPartClassName="WrappingLabel5EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel5ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureHistorySymbol"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </childNodes>
    <childNodes
        visualID="3008"
        editPartClassName="Node16EditPart"
        itemSemanticEditPolicyClassName="Node16ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node16CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node16GraphicalNodeEditPolicy"
        createCommandClassName="Node16CreateCommand"
        containers="//@diagram/@compartments.1 //@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeShallowHistoryFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeShallowHistoryFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureShallowHistorySymbol; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeShallowHistoryFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(25)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureShallowHistorySymbol = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureShallowHistorySymbol.setText(&quot;H&quot;);&#xA;&#xA;fFigureShallowHistorySymbol.setFont(FFIGURESHALLOWHISTORYSYMBOL_FONT);&#xA;&#xA;&#xA;&#xA;fFigureShallowHistorySymbol.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(fFigureShallowHistorySymbol);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureShallowHistorySymbol() {&#xA;&#x9;&#x9;return fFigureShallowHistorySymbol;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURESHALLOWHISTORYSYMBOL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ShallowHistoryFont&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="25"
            height="25"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.14">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Node/Children"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.15">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5014"
          editPartClassName="WrappingLabel6EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel6ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureShallowHistorySymbol"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </childNodes>
    <topLevelNodes
        visualID="2001"
        editPartClassName="NodeEditPart"
        itemSemanticEditPolicyClassName="NodeItemSemanticEditPolicy"
        canonicalEditPolicyClassName="NodeCanonicalEditPolicy"
        compartments="//@diagram/@compartments.0"
        graphicalNodeEditPolicyClassName="NodeGraphicalNodeEditPolicy"
        createCommandClassName="NodeCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="NodeEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeORFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeORFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOrName; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RoundedRectangle fFigureNodeOrCompartment; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeOrActions; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeORFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutThis = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureNodeOrName = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeOrName.setText(&quot;name&quot;);&#xA;&#xA;fFigureNodeOrName.setFont(FFIGURENODEORNAME_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeOrName.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;this.add(fFigureNodeOrName, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#xA;&#xA;fFigureNodeOrCompartment = new org.eclipse.draw2d.RoundedRectangle();&#xA;&#xA;fFigureNodeOrCompartment.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;&#x9;fFigureNodeOrCompartment.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fFigureNodeOrCompartment.setBackgroundColor(FFIGURENODEORCOMPARTMENT_BACK&#xA;);&#xA;&#xA;fFigureNodeOrCompartment.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#xA;this.add(fFigureNodeOrCompartment, org.eclipse.draw2d.BorderLayout.CENTER);&#xA;&#xA;&#xA;fFigureNodeOrActions = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeOrActions.setText(&quot;&lt;Actions>&quot;);&#xA;&#xA;fFigureNodeOrActions.setFont(FFIGURENODEORACTIONS_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeOrActions.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;fFigureNodeOrCompartment.add(fFigureNodeOrActions);&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel nodeOrActions2 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;nodeOrActions2.setText(&quot;&lt;Actions>&quot;);&#xA;&#xA;nodeOrActions2.setFont(NODEORACTIONS2_FONT);&#xA;&#xA;&#xA;&#xA;nodeOrActions2.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;fFigureNodeOrActions.add(nodeOrActions2);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOrName() {&#xA;&#x9;&#x9;return fFigureNodeOrName;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RoundedRectangle getFigureNodeOrCompartment() {&#xA;&#x9;&#x9;return fFigureNodeOrCompartment;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeOrActions() {&#xA;&#x9;&#x9;return fFigureNodeOrActions;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 253, 255, 182);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEORNAME_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;TitleFont&quot;, 14, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color FFIGURENODEORCOMPARTMENT_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEORACTIONS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ActionsFont&quot;, 12, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font NODEORACTIONS2_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ActionsFont&quot;, 12, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.0">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.1">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5005"
          editPartClassName="NodeNameEditPart"
          itemSemanticEditPolicyClassName="NodeNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeOrName"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5016"
          editPartClassName="NodeActionsEditPart"
          itemSemanticEditPolicyClassName="NodeActionsItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeOrActions"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.2"
            editorPattern=""
            editPattern=""
            viewMethod="NATIVE"
            editMethod="NATIVE">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/actions"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/actions"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2002"
        editPartClassName="Node2EditPart"
        itemSemanticEditPolicyClassName="Node2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node2CanonicalEditPolicy"
        compartments="//@diagram/@compartments.3"
        graphicalNodeEditPolicyClassName="Node2GraphicalNodeEditPolicy"
        createCommandClassName="Node2CreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeANDFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeANDFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeAndName; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RoundedRectangle fFigureNodeAndCompartment; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeANDFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutThis = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureNodeAndName = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeAndName.setText(&quot;name&quot;);&#xA;&#xA;fFigureNodeAndName.setFont(FFIGURENODEANDNAME_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeAndName.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;this.add(fFigureNodeAndName, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#xA;&#xA;fFigureNodeAndCompartment = new org.eclipse.draw2d.RoundedRectangle();&#xA;&#xA;fFigureNodeAndCompartment.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;&#x9;fFigureNodeAndCompartment.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fFigureNodeAndCompartment.setBackgroundColor(FFIGURENODEANDCOMPARTMENT_BACK&#xA;);&#xA;&#xA;fFigureNodeAndCompartment.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(20)&#xA;));&#xA;&#xA;this.add(fFigureNodeAndCompartment, org.eclipse.draw2d.BorderLayout.CENTER);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeAndName() {&#xA;&#x9;&#x9;return fFigureNodeAndName;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RoundedRectangle getFigureNodeAndCompartment() {&#xA;&#x9;&#x9;return fFigureNodeAndCompartment;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 177, 244, 240);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEANDNAME_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;TitleFont&quot;, 14, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color FFIGURENODEANDCOMPARTMENT_BACK = new org.eclipse.swt.graphics.Color(null, 222, 253, 253);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.8">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.9">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5006"
          editPartClassName="NodeName2EditPart"
          itemSemanticEditPolicyClassName="NodeName2ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeAndName"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2003"
        editPartClassName="VariableEditPart"
        itemSemanticEditPolicyClassName="VariableItemSemanticEditPolicy"
        canonicalEditPolicyClassName="VariableCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="VariableGraphicalNodeEditPolicy"
        createCommandClassName="VariableCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="VariableEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="VariableFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class VariableFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RoundedRectangle fFigureVartype; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureVariableName; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureVariableType; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public VariableFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutThis = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(15)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;this.setLineWidth(2);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(80)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureVariableName = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureVariableName.setText(&quot;Name&quot;);&#xA;&#xA;fFigureVariableName.setFont(FFIGUREVARIABLENAME_FONT);&#xA;&#xA;&#xA;&#xA;fFigureVariableName.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;this.add(fFigureVariableName, org.eclipse.draw2d.BorderLayout.TOP);&#xA;&#xA;&#xA;&#xA;fFigureVartype = new org.eclipse.draw2d.RoundedRectangle();&#xA;&#xA;fFigureVartype.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;&#x9;fFigureVartype.setBackgroundColor(FFIGUREVARTYPE_BACK&#xA;);&#xA;&#xA;this.add(fFigureVartype, org.eclipse.draw2d.BorderLayout.CENTER);&#xA;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutFFigureVartype = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;fFigureVartype.setLayoutManager(layoutFFigureVartype);&#xA;&#xA;&#xA;&#xA;fFigureVariableType = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureVariableType.setText(&quot;Type&quot;);&#xA;&#xA;fFigureVariableType.setFont(FFIGUREVARIABLETYPE_FONT);&#xA;&#xA;&#xA;&#xA;fFigureVariableType.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;fFigureVartype.add(fFigureVariableType, org.eclipse.draw2d.BorderLayout.CENTER);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RoundedRectangle getFigureVartype() {&#xA;&#x9;&#x9;return fFigureVartype;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureVariableName() {&#xA;&#x9;&#x9;return fFigureVariableName;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureVariableType() {&#xA;&#x9;&#x9;return fFigureVariableType;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 72, 234, 126);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREVARIABLENAME_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;varName&quot;, 12, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color FFIGUREVARTYPE_BACK = new org.eclipse.swt.graphics.Color(null, 72, 234, 126);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREVARIABLETYPE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;VarType&quot;, 12, org.eclipse.swt.SWT.ITALIC);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="StateChart.genmodel#//statechart/Variable"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/variables"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/variables"/>
      </modelFacet>
      <labels
          visualID="5007"
          editPartClassName="VariableNameEditPart"
          itemSemanticEditPolicyClassName="VariableNameItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureVariableName"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Variable/name"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Variable/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5008"
          editPartClassName="VariableTypeEditPart"
          itemSemanticEditPolicyClassName="VariableTypeItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureVariableType"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Variable/type"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Variable/type"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2004"
        editPartClassName="Node3EditPart"
        itemSemanticEditPolicyClassName="Node3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node3CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node3GraphicalNodeEditPolicy"
        createCommandClassName="Node3CreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeStartFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeStartFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeStartFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(16)&#xA;, getMapMode().DPtoLP(16)&#xA;));&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="16"
            height="16"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.6">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.7">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
    </topLevelNodes>
    <topLevelNodes
        visualID="2005"
        editPartClassName="Node4EditPart"
        itemSemanticEditPolicyClassName="Node4ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node4CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node4GraphicalNodeEditPolicy"
        createCommandClassName="Node4CreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeEndFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeEndFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.Ellipse fFigureBlack; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeEndFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.BorderLayout layoutThis = new org.eclipse.draw2d.BorderLayout();&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(4);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(35)&#xA;, getMapMode().DPtoLP(35)&#xA;));&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(35)&#xA;, getMapMode().DPtoLP(35)&#xA;));&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureBlack = new org.eclipse.draw2d.Ellipse();&#xA;&#xA;&#x9;fFigureBlack.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;this.add(fFigureBlack, org.eclipse.draw2d.BorderLayout.CENTER);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.Ellipse getFigureBlack() {&#xA;&#x9;&#x9;return fFigureBlack;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="35"
            height="35"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.10">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.11">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
    </topLevelNodes>
    <topLevelNodes
        visualID="2006"
        editPartClassName="Node5EditPart"
        itemSemanticEditPolicyClassName="Node5ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node5CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node5GraphicalNodeEditPolicy"
        createCommandClassName="Node5CreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeBasicFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeBasicFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBasicName; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureNodeBasicActions; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeBasicFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(18)&#xA;, getMapMode().DPtoLP(18)&#xA;));&#xA;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureNodeBasicName = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeBasicName.setText(&quot;name&quot;);&#xA;&#xA;fFigureNodeBasicName.setFont(FFIGURENODEBASICNAME_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeBasicName.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;this.add(fFigureNodeBasicName);&#xA;&#xA;&#xA;&#xA;fFigureNodeBasicActions = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureNodeBasicActions.setText(&quot;&quot;);&#xA;&#xA;fFigureNodeBasicActions.setFont(FFIGURENODEBASICACTIONS_FONT);&#xA;&#xA;&#xA;&#xA;fFigureNodeBasicActions.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;, getMapMode().DPtoLP(10)&#xA;));&#xA;&#xA;this.add(fFigureNodeBasicActions);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBasicName() {&#xA;&#x9;&#x9;return fFigureNodeBasicName;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureNodeBasicActions() {&#xA;&#x9;&#x9;return fFigureNodeBasicActions;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 192, 255, 124);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEBASICNAME_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;TitleFont&quot;, 14, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURENODEBASICACTIONS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;TextFont&quot;, 12, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.4">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.5">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5009"
          editPartClassName="NodeName3EditPart"
          itemSemanticEditPolicyClassName="NodeName3ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeBasicName"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="5018"
          editPartClassName="NodeActions2EditPart"
          itemSemanticEditPolicyClassName="NodeActions2ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureNodeBasicActions"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Node/actions"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Node/actions"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2007"
        editPartClassName="Node6EditPart"
        itemSemanticEditPolicyClassName="Node6ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node6CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node6GraphicalNodeEditPolicy"
        createCommandClassName="Node6CreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeConditionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeConditionFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCondSymbol; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeConditionFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(25)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureCondSymbol = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureCondSymbol.setText(&quot;C&quot;);&#xA;&#xA;fFigureCondSymbol.setFont(FFIGURECONDSYMBOL_FONT);&#xA;&#xA;&#xA;&#xA;fFigureCondSymbol.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(fFigureCondSymbol);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCondSymbol() {&#xA;&#x9;&#x9;return fFigureCondSymbol;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURECONDSYMBOL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;CondFont&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="25"
            height="25"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.2">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.3">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5010"
          editPartClassName="WrappingLabelEditPart"
          itemSemanticEditPolicyClassName="WrappingLabelItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureCondSymbol"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2008"
        editPartClassName="Node7EditPart"
        itemSemanticEditPolicyClassName="Node7ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node7CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node7GraphicalNodeEditPolicy"
        createCommandClassName="Node7CreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeHistoryFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeHistoryFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureHistorySymbol; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeHistoryFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(25)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureHistorySymbol = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureHistorySymbol.setText(&quot;H*&quot;);&#xA;&#xA;fFigureHistorySymbol.setFont(FFIGUREHISTORYSYMBOL_FONT);&#xA;&#xA;&#xA;&#xA;fFigureHistorySymbol.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(fFigureHistorySymbol);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureHistorySymbol() {&#xA;&#x9;&#x9;return fFigureHistorySymbol;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGUREHISTORYSYMBOL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;HistoryFont&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="25"
            height="25"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.12">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.13">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5011"
          editPartClassName="WrappingLabel2EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel2ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureHistorySymbol"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2009"
        editPartClassName="Node8EditPart"
        itemSemanticEditPolicyClassName="Node8ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="Node8CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Node8GraphicalNodeEditPolicy"
        createCommandClassName="Node8CreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="NodeShallowHistoryFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class NodeShallowHistoryFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureShallowHistorySymbol; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public NodeShallowHistoryFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(25)&#xA;, getMapMode().DPtoLP(25)&#xA;));&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureShallowHistorySymbol = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureShallowHistorySymbol.setText(&quot;H&quot;);&#xA;&#xA;fFigureShallowHistorySymbol.setFont(FFIGURESHALLOWHISTORYSYMBOL_FONT);&#xA;&#xA;&#xA;&#xA;fFigureShallowHistorySymbol.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(fFigureShallowHistorySymbol);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureShallowHistorySymbol() {&#xA;&#x9;&#x9;return fFigureShallowHistorySymbol;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURESHALLOWHISTORYSYMBOL_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;ShallowHistoryFont&quot;, 10, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="25"
            height="25"/>
      </viewmap>
      <modelFacet
          modelElementSelector="//@expressionProviders/@providers.0/@expressions.14">
        <metaClass
            href="StateChart.genmodel#//statechart/Node"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/nodes"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.15">
            <feature
                href="StateChart.genmodel#//statechart/Node/type"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="5012"
          editPartClassName="WrappingLabel3EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel3ItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureShallowHistorySymbol"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.0"/>
      </labels>
    </topLevelNodes>
    <links
        visualID="4001"
        editPartClassName="TransitionEditPart"
        itemSemanticEditPolicyClassName="TransitionItemSemanticEditPolicy"
        createCommandClassName="TransitionCreateCommand"
        reorientCommandClassName="TransitionReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="TransitionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="TransitionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class TransitionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransitionTEFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public TransitionFigure() {&#xA;&#x9;&#x9;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureTransitionTEFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureTransitionTEFigure.setText(&quot;&lt;..>&quot;);&#xA;&#xA;fFigureTransitionTEFigure.setFont(FFIGURETRANSITIONTEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fFigureTransitionTEFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setLineWidth(2);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransitionTEFigure() {&#xA;&#x9;&#x9;return fFigureTransitionTEFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURETRANSITIONTEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;TransitionFont&quot;, 12, org.eclipse.swt.SWT.NORMAL);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="StateChart.genmodel#//statechart/Transition"/>
        <containmentMetaFeature
            href="StateChart.genmodel#//statechart/Model/transitions"/>
        <childMetaFeature
            href="StateChart.genmodel#//statechart/Model/transitions"/>
        <sourceMetaFeature
            href="StateChart.genmodel#//statechart/Transition/source"/>
        <targetMetaFeature
            href="StateChart.genmodel#//statechart/Transition/target"/>
      </modelFacet>
      <labels
          visualID="6001"
          editPartClassName="TransitionTEEditPart"
          itemSemanticEditPolicyClassName="TransitionTEItemSemanticEditPolicy">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureTransitionTEFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.1"
            viewPattern=""
            editorPattern=""
            editPattern="">
          <metaFeatures
              href="StateChart.genmodel#//statechart/Transition/TE"/>
          <editableMetaFeatures
              href="StateChart.genmodel#//statechart/Transition/TE"/>
        </modelFacet>
      </labels>
    </links>
    <compartments
        visualID="7001"
        editPartClassName="NodeNodeOrCompEditPart"
        itemSemanticEditPolicyClassName="NodeNodeOrCompItemSemanticEditPolicy"
        canonicalEditPolicyClassName="NodeNodeOrCompCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0 //@diagram/@childNodes.1 //@diagram/@childNodes.2 //@diagram/@childNodes.3 //@diagram/@childNodes.4 //@diagram/@childNodes.5 //@diagram/@childNodes.6 //@diagram/@childNodes.7"
        title="NodeOrComp"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureNodeOrCompartment"
          figureQualifiedClassName="org.eclipse.draw2d.RoundedRectangle">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
    </compartments>
    <compartments
        visualID="7002"
        editPartClassName="NodeNodeOrComp2EditPart"
        itemSemanticEditPolicyClassName="NodeNodeOrComp2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="NodeNodeOrComp2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0 //@diagram/@childNodes.1 //@diagram/@childNodes.2 //@diagram/@childNodes.3 //@diagram/@childNodes.4 //@diagram/@childNodes.5 //@diagram/@childNodes.6 //@diagram/@childNodes.7"
        title="NodeOrComp"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@childNodes.2"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureNodeOrCompartment"
          figureQualifiedClassName="org.eclipse.draw2d.RoundedRectangle">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
    </compartments>
    <compartments
        visualID="7003"
        editPartClassName="NodeNodeAndCompEditPart"
        itemSemanticEditPolicyClassName="NodeNodeAndCompItemSemanticEditPolicy"
        canonicalEditPolicyClassName="NodeNodeAndCompCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.2"
        title="NodeAndComp"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@childNodes.4"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureNodeAndCompartment"
          figureQualifiedClassName="org.eclipse.draw2d.RoundedRectangle">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
    </compartments>
    <compartments
        visualID="7004"
        editPartClassName="NodeNodeAndComp2EditPart"
        itemSemanticEditPolicyClassName="NodeNodeAndComp2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="NodeNodeAndComp2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.2"
        title="NodeAndComp"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.1"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureNodeAndCompartment"
          figureQualifiedClassName="org.eclipse.draw2d.RoundedRectangle">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
    </compartments>
    <palette>
      <groups
          title="statechart">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Node OR"
            description="Create new Node Or"
            genNodes="//@diagram/@topLevelNodes.0 //@diagram/@childNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Node AND"
            description="Create new Node"
            genNodes="//@diagram/@childNodes.4 //@diagram/@topLevelNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Node BASIC"
            description="Create new Node Basic"
            genNodes="//@diagram/@childNodes.1 //@diagram/@topLevelNodes.5"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Node CONDITION"
            description="Create new Node Condition"
            genNodes="//@diagram/@childNodes.0 //@diagram/@topLevelNodes.6"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Node START"
            description="Create new Node Start"
            genNodes="//@diagram/@childNodes.3 //@diagram/@topLevelNodes.3"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Node END"
            description="Create new Node End"
            genNodes="//@diagram/@childNodes.5 //@diagram/@topLevelNodes.4"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Transition"
            description="Create new Transition"
            genLinks="//@diagram/@links.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Variable"
            description="Create new Variable"
            genNodes="//@diagram/@topLevelNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Node HISTORY"
            description="Create new node History"
            genNodes="//@diagram/@childNodes.6 //@diagram/@topLevelNodes.7"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Node SHALLOW HISTORY"
            description="Create new node Shallow History"
            genNodes="//@diagram/@childNodes.7 //@diagram/@topLevelNodes.8"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="StateChartDesign.diagram.general"
        name="StateChart Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="StateChartDesign.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="StateChartDesign.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="StateChartDesign.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="StateChartDesign.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin
      printingEnabled="true">
    <requiredPlugins>org.eclipse.gmf.tooling.runtime</requiredPlugins>
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
  </plugin>
  <editor/>
  <navigator>
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.0"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.1"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.0"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.1"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.2"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.3"/>
    <childReferences
        parent="//@diagram/@childNodes.4"
        child="//@diagram/@childNodes.2"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.4"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.6"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@childNodes.7"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.2"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.3"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.4"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.6"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.7"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@childNodes.2"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.2"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.3"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.4"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.5"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.6"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.7"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.8"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.0"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.3"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.3"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.4"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.4"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.5"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.6"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.6"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.7"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.7"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.8"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.8"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.3"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.3"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.4"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.4"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.6"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.6"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.7"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.7"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.3"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.3"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.4"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.4"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.5"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.5"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.6"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.6"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.7"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.7"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.8"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.8"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.2"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.3"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.3"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.4"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.4"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.5"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.6"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.6"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.7"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.7"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="StateChart.genmodel#/"/>
  <expressionProviders>
    <providers
        xsi:type="gmfgen:GenExpressionInterpreter">
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="type = 'OR'"/>
      <expressions
          body="'OR'&#xA;"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="type='CONDITION'"/>
      <expressions
          body="'CONDITION'"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="type='BASIC'"/>
      <expressions
          body="'BASIC'"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="type='START'"/>
      <expressions
          body="'START'"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="type='AND'"/>
      <expressions
          body="'AND'"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="type='END'"/>
      <expressions
          body="'END'"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="type='HISTORY'"/>
      <expressions
          body="'HISTORY'"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="type='SHALLOW_HISTORY'"/>
      <expressions
          body="'SHALLOW_HISTORY'"/>
    </providers>
    <providers
        xsi:type="gmfgen:GenJavaExpressionProvider">
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="this.getNodes()!=null &amp;&amp; this.getNodes().size()>1"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="!this.getType().equals(&quot;OR&quot;) &amp;&amp; this.getFather_of().getType().equals(&quot;AND&quot;)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="this.getTarget()!=null &amp;&amp; this.getTarget().getType().equals(&quot;START&quot;)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="this.getSource()!=null &amp;&amp; this.getSource().getType().equals(&quot;END&quot;)"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="this.getTarget()!=null &amp;&amp; this.getTarget().getFather()!=null &amp;&amp;&#xA;this.getSource()!=null &amp;&amp; this.getSource().getFather()!=null &amp;&amp;&#xA;!this.getSource().getFather().equals(this.getTarget().getFather())"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="int count =0;&#xA;for(int i=0; i&lt;this.getChildren().size(); i++){&#xA;if(this.getType().equals(&quot;OR&quot;) &amp;&amp; ((Node)this.getChildren().get(i)).getType().equals(&quot;START&quot;)){&#xA;count ++;&#xA;}&#xA;}&#xA;count>1"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="int count =0;&#xA;for(int i=0; i&lt;this.getChildren().size(); i++){&#xA;if(this.getType().equals(&quot;OR&quot;) &amp;&amp; ((Node)this.getChildren().get(i)).getType().equals(&quot;END&quot;)){&#xA;count ++;&#xA;}&#xA;}&#xA;count>1"/>
    </providers>
  </expressionProviders>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:ExternalParser"
        uses="//@diagram/@childNodes.0/@labels.0/@modelFacet //@diagram/@childNodes.6/@labels.0/@modelFacet //@diagram/@childNodes.7/@labels.0/@modelFacet //@diagram/@topLevelNodes.6/@labels.0/@modelFacet //@diagram/@topLevelNodes.7/@labels.0/@modelFacet //@diagram/@topLevelNodes.8/@labels.0/@modelFacet"/>
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.1/@labels.0/@modelFacet //@diagram/@childNodes.1/@labels.1/@modelFacet //@diagram/@childNodes.4/@labels.0/@modelFacet //@diagram/@childNodes.2/@labels.0/@modelFacet //@diagram/@topLevelNodes.0/@labels.0/@modelFacet //@diagram/@topLevelNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.2/@labels.0/@modelFacet //@diagram/@topLevelNodes.2/@labels.1/@modelFacet //@diagram/@topLevelNodes.5/@labels.0/@modelFacet //@diagram/@topLevelNodes.5/@labels.1/@modelFacet //@diagram/@links.0/@labels.0/@modelFacet"/>
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.2/@labels.1/@modelFacet //@diagram/@topLevelNodes.0/@labels.1/@modelFacet"
        viewMethod="NATIVE"
        editMethod="NATIVE"/>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
