<?xml version="1.0" encoding="UTF-8"?>
<gmfmap:Mapping
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:gmfmap="http://www.eclipse.org/gmf/2008/mappings"
    xmlns:gmftool="http://www.eclipse.org/gmf/2005/ToolDefinition">
  <nodes>
    <containmentFeature
        href="StateChart.ecore#//Model/nodes"/>
    <childrenFeature
        href="StateChart.ecore#//Model/nodes"/>
    <ownedChild>
      <domainMetaElement
          href="StateChart.ecore#//Node"/>
      <domainSpecialization
          body="type = 'OR'"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="StateChart.ecore#//Node/type"/>
          <value
              body="'OR'&#xA;"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="StateChart.gmfgraph#NodeNameOr"/>
        <features
            href="StateChart.ecore#//Node/name"/>
        <editableFeatures
            href="StateChart.ecore#//Node/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="StateChart.gmftool#//@palette/@tools.0/@tools.0"/>
      <diagramNode
          href="StateChart.gmfgraph#NodeOr"/>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.6/@ownedChild">
        <containmentFeature
            href="StateChart.ecore#//Node/Children"/>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.5/@ownedChild">
        <containmentFeature
            href="StateChart.ecore#//Node/Children"/>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild">
        <containmentFeature
            href="StateChart.ecore#//Node/Children"/>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.3/@ownedChild">
        <containmentFeature
            href="StateChart.ecore#//Node/Children"/>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.1/@ownedChild">
        <containmentFeature
            href="StateChart.ecore#//Node/Children"/>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.4/@ownedChild">
        <containmentFeature
            href="StateChart.ecore#//Node/Children"/>
      </children>
      <compartments
          children="//@nodes.0/@ownedChild/@children.2 //@nodes.0/@ownedChild/@children.4 //@nodes.0/@ownedChild/@children.3 //@nodes.0/@ownedChild/@children.5 //@nodes.0/@ownedChild/@children.0 //@nodes.0/@ownedChild/@children.1">
        <compartment
            href="StateChart.gmfgraph#NodeOrComp"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="StateChart.ecore#//Model/nodes"/>
    <childrenFeature
        href="StateChart.ecore#//Model/nodes"/>
    <ownedChild>
      <domainMetaElement
          href="StateChart.ecore#//Node"/>
      <domainSpecialization
          body="type='AND'"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="StateChart.ecore#//Node/type"/>
          <value
              body="'AND'"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="StateChart.gmfgraph#NodeNameAnd"/>
        <features
            href="StateChart.ecore#//Node/name"/>
        <editableFeatures
            href="StateChart.ecore#//Node/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="StateChart.gmftool#//@palette/@tools.0/@tools.1"/>
      <diagramNode
          href="StateChart.gmfgraph#NodeAnd"/>
      <children
          compartment="//@nodes.1/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild">
        <containmentFeature
            href="StateChart.ecore#//Node/Children"/>
      </children>
      <compartments
          children="//@nodes.1/@ownedChild/@children.0">
        <compartment
            href="StateChart.gmfgraph#NodeAndComp"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="StateChart.ecore#//Model/variables"/>
    <ownedChild>
      <domainMetaElement
          href="StateChart.ecore#//Variable"/>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="StateChart.gmfgraph#VariableName"/>
        <features
            href="StateChart.ecore#//Variable/name"/>
        <editableFeatures
            href="StateChart.ecore#//Variable/name"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="StateChart.gmfgraph#VariableType"/>
        <features
            href="StateChart.ecore#//Variable/type"/>
        <editableFeatures
            href="StateChart.ecore#//Variable/type"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="StateChart.gmftool#//@palette/@tools.0/@tools.7"/>
      <diagramNode
          href="StateChart.gmfgraph#Variable"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="StateChart.ecore#//Model/nodes"/>
    <childrenFeature
        href="StateChart.ecore#//Model/nodes"/>
    <ownedChild>
      <domainMetaElement
          href="StateChart.ecore#//Node"/>
      <domainSpecialization
          body="type='START'"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="StateChart.ecore#//Node/type"/>
          <value
              body="'START'"/>
        </initializers>
      </domainInitializer>
      <tool
          xsi:type="gmftool:CreationTool"
          href="StateChart.gmftool#//@palette/@tools.0/@tools.4"/>
      <diagramNode
          href="StateChart.gmfgraph#NodeStart"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="StateChart.ecore#//Model/nodes"/>
    <childrenFeature
        href="StateChart.ecore#//Model/nodes"/>
    <ownedChild>
      <domainMetaElement
          href="StateChart.ecore#//Node"/>
      <domainSpecialization
          body="type='END'"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="StateChart.ecore#//Node/type"/>
          <value
              body="'END'"/>
        </initializers>
      </domainInitializer>
      <tool
          xsi:type="gmftool:CreationTool"
          href="StateChart.gmftool#//@palette/@tools.0/@tools.5"/>
      <diagramNode
          href="StateChart.gmfgraph#NodeEnd"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="StateChart.ecore#//Model/nodes"/>
    <childrenFeature
        href="StateChart.ecore#//Model/nodes"/>
    <ownedChild>
      <domainMetaElement
          href="StateChart.ecore#//Node"/>
      <domainSpecialization
          body="type='BASIC'"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="StateChart.ecore#//Node/type"/>
          <value
              body="'BASIC'"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="StateChart.gmfgraph#NodeNameBasic"/>
        <features
            href="StateChart.ecore#//Node/name"/>
        <editableFeatures
            href="StateChart.ecore#//Node/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="StateChart.gmftool#//@palette/@tools.0/@tools.2"/>
      <diagramNode
          href="StateChart.gmfgraph#NodeBasic"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="StateChart.ecore#//Model/nodes"/>
    <childrenFeature
        href="StateChart.ecore#//Model/nodes"/>
    <ownedChild>
      <domainMetaElement
          href="StateChart.ecore#//Node"/>
      <domainSpecialization
          body="type='CONDITION'"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="StateChart.ecore#//Node/type"/>
          <value
              body="'CONDITION'"/>
        </initializers>
      </domainInitializer>
      <labelMappings>
        <diagramLabel
            href="StateChart.gmfgraph#ConditionSymbol"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="StateChart.gmftool#//@palette/@tools.0/@tools.3"/>
      <diagramNode
          href="StateChart.gmfgraph#NodeCondition"/>
    </ownedChild>
  </nodes>
  <links>
    <domainMetaElement
        href="StateChart.ecore#//Transition"/>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping"
        viewPattern=""
        editorPattern=""
        editPattern="">
      <diagramLabel
          href="StateChart.gmfgraph#TransitionTE"/>
      <features
          href="StateChart.ecore#//Transition/TE"/>
      <editableFeatures
          href="StateChart.ecore#//Transition/TE"/>
    </labelMappings>
    <containmentFeature
        href="StateChart.ecore#//Model/transitions"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="StateChart.gmftool#//@palette/@tools.0/@tools.6"/>
    <diagramLink
        href="StateChart.gmfgraph#Transition"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="StateChart.ecore#//Transition/source"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="StateChart.ecore#//Transition/target"/>
  </links>
  <diagram>
    <diagramCanvas
        href="StateChart.gmfgraph#statechart"/>
    <domainModel
        href="StateChart.ecore#/"/>
    <domainMetaElement
        href="StateChart.ecore#//Model"/>
    <palette
        href="StateChart.gmftool#//@palette"/>
  </diagram>
  <audits
      id="statechart.audits"
      name="statechart audits"
      description="A set of StateChart's Audits">
    <audits
        name="oneRoot"
        description="Only one root per model"
        id="root"
        useInLiveMode="true"
        message="Only one root node can exist in a Statechart">
      <rule
          body="this.getNodes()!=null &amp;&amp; this.getNodes().size()>1"
          language="java"/>
      <target
          xsi:type="gmfmap:DomainElementTarget">
        <element
            href="StateChart.ecore#//Model"/>
      </target>
    </audits>
    <audits
        name="ANDORnode"
        description="AND Node have only OR nodes as children"
        id="AND.OR.children"
        useInLiveMode="true"
        message="AND node can have only OR nodes as children">
      <rule
          body="!this.getType().equals(&quot;OR&quot;) &amp;&amp; this.getFather_of().getType().equals(&quot;AND&quot;)"
          language="java"/>
      <target
          xsi:type="gmfmap:DomainElementTarget">
        <element
            href="StateChart.ecore#//Node"/>
      </target>
    </audits>
    <audits
        name="start source"
        description="A START node can only be source of an transition"
        id="start.source"
        message="START node can't be target node of an transition">
      <rule
          body="this.getTarget()!=null &amp;&amp; this.getTarget().getType().equals(&quot;START&quot;)"
          language="java"/>
      <target
          xsi:type="gmfmap:DomainElementTarget">
        <element
            href="StateChart.ecore#//Transition"/>
      </target>
    </audits>
    <audits
        name="end target"
        description="End node can't be source of an transition"
        id="end.target"
        message="END node can only be target of an transition">
      <rule
          body="this.getSource()!=null &amp;&amp; this.getSource().getType().equals(&quot;END&quot;)"
          language="java"/>
      <target
          xsi:type="gmfmap:DomainElementTarget">
        <element
            href="StateChart.ecore#//Transition"/>
      </target>
    </audits>
    <audits
        name="same father"
        description="same father for source-target of an transition"
        id="same.father"
        severity="WARNING"
        message="It's recommended the source and the target to have the same father node">
      <rule
          body="this.getTarget()!=null &amp;&amp; this.getTarget().getFather()!=null &amp;&amp;&#xA;this.getSource()!=null &amp;&amp; this.getSource().getFather()!=null &amp;&amp;&#xA;!this.getSource().getFather().equals(this.getTarget().getFather())"
          language="java"/>
      <target
          xsi:type="gmfmap:DomainElementTarget">
        <element
            href="StateChart.ecore#//Transition"/>
      </target>
    </audits>
    <audits
        name="oneStartNode"
        description="Only one START Node per level"
        id="start.node.one"
        useInLiveMode="true"
        message="An OR state can have only one START node as a child">
      <rule
          body="int count =0;&#xA;for(int i=0; i&lt;this.getChildren().size(); i++){&#xA;if(this.getType().equals(&quot;OR&quot;) &amp;&amp; ((Node)this.getChildren().get(i)).getType().equals(&quot;START&quot;)){&#xA;count ++;&#xA;}&#xA;}&#xA;count>1"
          language="java"/>
      <target
          xsi:type="gmfmap:DomainElementTarget">
        <element
            href="StateChart.ecore#//Node"/>
      </target>
    </audits>
    <audits
        name="oneEndNode"
        description="Only one END Node per level"
        id="end.node.one"
        useInLiveMode="true"
        message="An OR state can have only one END node as a child">
      <rule
          body="int count =0;&#xA;for(int i=0; i&lt;this.getChildren().size(); i++){&#xA;if(this.getType().equals(&quot;OR&quot;) &amp;&amp; ((Node)this.getChildren().get(i)).getType().equals(&quot;END&quot;)){&#xA;count ++;&#xA;}&#xA;}&#xA;count>1"
          language="java"/>
      <target
          xsi:type="gmfmap:DomainElementTarget">
        <element
            href="StateChart.ecore#//Node"/>
      </target>
    </audits>
  </audits>
</gmfmap:Mapping>
